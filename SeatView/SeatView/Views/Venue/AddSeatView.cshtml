@model SeatView.Models.SeatModel

@{
    ViewBag.Title = "AddSeatView";
}

<div class="venueBreadcrumbs">
    @Html.ActionLink("Back to List", "displayLayoutInfo", "Venue", new { @class = "btn btn-link venueBackLink" })
</div>

<h2 class="addVenueHeader">Add a Seat</h2>

<div>
    <div class="row justify-content-evenly">
        <div class="col-4 insertSeatImg">
            <img src="@Url.Content(Model.venueUrl)" width="250" height="250" alt="layout" id="layout"/>
        </div>
        <div class="col-4">
            @using (Html.BeginForm("processSeatInsert", "Venue", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                <label class="form-label mt-4">Please select a seat from the venue layout.</label>
                <div class="seatByClickBtnGroup">
                    <button type="button" class="btn btn-info seatByClickBtn" id="chooseSeatBtn">Choose Seat</button>
                    <button type="button" class="btn btn-warning seatByClickBtn" id="clearBtn">Clear</button>
                </div>

                <div class="seatAlert">
                    <div class="alert alert-success text-center hidden" id="seatAlert" style="padding: 5px 20px 5px 20px;width: 450px">
                        <strong>Seat Selected!</strong>
                    </div>
                </div>

                <div class="form-group">
                    <label class="form-label mt-4">Section</label>
                    @Html.EditorFor(model => model.section, new { htmlAttributes = new { @class = "form-control seatFormFields", placeholder = "Section", id = "sectionField" } })
                </div>
                <div class="form-group">
                    <label class="form-label mt-4">Row</label>
                    @Html.EditorFor(model => model.row, new { htmlAttributes = new { @class = "form-control seatFormFields", placeholder = "Row", id = "rowField" } })
                </div>
                <div class="form-group">
                    <label class="form-label mt-4">Name</label>
                    @Html.EditorFor(model => model.seatNum, new { htmlAttributes = new { @class = "form-control seatFormFields", placeholder = "Seat Number", id = "seatNumField" } })
                </div>

                <div class="form-group">
                    <label class="form-label mt-4">Upload Image</label><br />
                    <input type="file" name="imageFileName" requried="required" id="imgInput">
                </div>

                // hidden inputs for the x and y coordinates for access to attribute in the seat model
                @Html.HiddenFor(model => model.x_coord, new { id = "x_coord", Value = "" });
                @Html.HiddenFor(model => model.y_coord, new { id = "y_coord", Value = "" });

                <div class="venueFormSaveBtnWrapper">
                    <button type="submit" class="btn btn-primary venueFormSaveBtn" id="saveBtn">Save</button>
                </div>
            }
        </div>
    </div>
</div>

<script>
    let isInClickMode = false;

    // eventListener for 'chooseSeatBtn'
    document.getElementById("chooseSeatBtn").addEventListener('click', function (e) {
        // not in click mode; disable the 'go' button, hide the success alert, disable the 'clear' button
        if (!isInClickMode) {
            document.getElementById("seatAlert").classList.add("hidden");
            document.getElementById("clearBtn").classList.add("disabled");

            document.getElementById("sectionField").toggleAttribute("disabled");
            document.getElementById("rowField").toggleAttribute("disabled");
            document.getElementById("seatNumField").toggleAttribute("disabled");
            document.getElementById("imgInput").toggleAttribute("disabled");
            document.getElementById("saveBtn").toggleAttribute("disabled");

            isInClickMode = true;
        }
        // in click mode; undisable the 'go' button; update boolean 'isInClickMode' to true
        else {
            document.getElementById("clearBtn").classList.toggle("disabled");
            isInClickMode = false;
        }
    });

    // eventListener for layout image
    document.getElementById("layout").addEventListener('click', function (event) {
        // in click mode; get x and y coordinates, make success alert visible, undisable 'go' and 'clear', disable 'chooseSeat'
        if (isInClickMode) {
            document.getElementById("x_coord").setAttribute("value", event.offsetX);
            document.getElementById("y_coord").setAttribute("value", event.offsetY);
            document.getElementById("seatAlert").classList.remove("hidden");

            document.getElementById("chooseSeatBtn").classList.add("disabled");
            document.getElementById("clearBtn").classList.remove("disabled");

            document.getElementById("sectionField").toggleAttribute("disabled");
            document.getElementById("rowField").toggleAttribute("disabled");
            document.getElementById("seatNumField").toggleAttribute("disabled");
            document.getElementById("imgInput").toggleAttribute("disabled");
            document.getElementById("saveBtn").toggleAttribute("disabled");

        }
    });

    // eventListener for 'clearBtn'
    document.getElementById("clearBtn").addEventListener('click', function (event) {
        // update 'isInClickMode' to false, hide success alert, undisable 'chooseSeatBtn'
        isInClickMode = false;
        document.getElementById("seatAlert").classList.add("hidden");
        document.getElementById("chooseSeatBtn").classList.remove("disabled");
    });
</script>
